"use strict";(self.webpackChunklimo_cobot_documentation=self.webpackChunklimo_cobot_documentation||[]).push([[1297],{40835:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>x});const s=JSON.parse('{"id":"core-concepts/navigation","title":"Waypoint Navigation","description":"Navigation is what lets your robot move autonomously to precise locations\u2014even in dynamic, obstacle-filled environments.","source":"@site/docs/core-concepts/navigation.md","sourceDirName":"core-concepts","slug":"/core-concepts/navigation","permalink":"/limo_cobot_documentation/docs/core-concepts/navigation","draft":false,"unlisted":false,"editUrl":"https://github.com/krish-rRay23/limo_cobot_documentation/tree/main/docs/core-concepts/navigation.md","tags":[],"version":"current","lastUpdatedBy":"Krish Ray","lastUpdatedAt":1754637033000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Waypoint Navigation"},"sidebar":"tutorialSidebar","previous":{"title":"SLAM (Simultaneous Localization and Mapping)","permalink":"/limo_cobot_documentation/docs/core-concepts/slam"},"next":{"title":"Manipulation Basics","permalink":"/limo_cobot_documentation/docs/core-concepts/manipulation"}}');var i=r(74848),o=r(28453),t=r(27293),a=r(11470),l=r(19365);const c={sidebar_position:4,title:"Waypoint Navigation"},d="\ud83d\ude97 Waypoint Navigation",h={},x=[{value:"\ud83e\udded Navigation Fundamentals",id:"-navigation-fundamentals",level:2},{value:"\ud83d\udccd Waypoint-Based Navigation",id:"-waypoint-based-navigation",level:2},{value:"<strong>Waypoint Structure</strong>",id:"waypoint-structure",level:3},{value:"\ud83d\uddfa\ufe0f Setting Waypoints in Your Project",id:"\ufe0f-setting-waypoints-in-your-project",level:2},{value:"\ud83d\udee3\ufe0f Path Planning Algorithms",id:"\ufe0f-path-planning-algorithms",level:2},{value:"<strong>Global Path Planning</strong>",id:"global-path-planning",level:3},{value:"<strong>Local Path Planning</strong>",id:"local-path-planning",level:3},{value:"\ud83d\udea7 Obstacle Avoidance",id:"-obstacle-avoidance",level:2},{value:"<strong>Sensor Integration</strong>",id:"sensor-integration",level:3},{value:"<strong>Costmap Layers</strong>",id:"costmap-layers",level:3},{value:"<strong>Recovery Behaviors</strong>",id:"recovery-behaviors",level:3},{value:"\ud83c\udfc1 Running Waypoint Navigation",id:"-running-waypoint-navigation",level:2},{value:"\u2699\ufe0f Navigation Configuration",id:"\ufe0f-navigation-configuration",level:2},{value:"<strong>Key Navigation Parameters</strong>",id:"key-navigation-parameters",level:3},{value:"<strong>Tuning for Your Environment</strong>",id:"tuning-for-your-environment",level:3},{value:"\ud83d\udca1 Best Practices &amp; Troubleshooting",id:"-best-practices--troubleshooting",level:2},{value:"<strong>Planning Your Waypoints</strong>",id:"planning-your-waypoints",level:3},{value:"<strong>Common Issues &amp; Solutions</strong>",id:"common-issues--solutions",level:3},{value:"\ud83d\udcca Performance Monitoring",id:"-performance-monitoring",level:2},{value:"<strong>Navigation Metrics</strong>",id:"navigation-metrics",level:3},{value:"<strong>Success Rate Tracking</strong>",id:"success-rate-tracking",level:3},{value:"\ud83c\udfaf Integration with Object Detection",id:"-integration-with-object-detection",level:2},{value:"\ud83d\udcda Learn More",id:"-learn-more",level:2},{value:"\ud83c\udfaf Next Steps",id:"-next-steps",level:2}];function g(n){const e={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...n.components},{Details:r}=e;return r||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"-waypoint-navigation",children:"\ud83d\ude97 Waypoint Navigation"})}),"\n",(0,i.jsxs)(e.p,{children:["Navigation is what lets your robot ",(0,i.jsx)(e.strong,{children:"move autonomously to precise locations"}),"\u2014even in dynamic, obstacle-filled environments.",(0,i.jsx)(e.br,{}),"\n","This section explains how your project achieves robust, safe, and intelligent path-following using ",(0,i.jsx)(e.strong,{children:"waypoints"})," and ROS2 navigation stack."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-navigation-fundamentals",children:"\ud83e\udded Navigation Fundamentals"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Autonomous navigation"})," answers two main questions:"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:['"Where am I?" (Localization\u2014see ',(0,i.jsx)(e.a,{href:"/limo_cobot_documentation/docs/core-concepts/slam",children:"SLAM"}),")"]}),"\n",(0,i.jsx)(e.li,{children:'"How do I get to my goal?" (Path Planning)'}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Core components in ROS2 navigation:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Global Planner:"})," Plans a path from the robot's current pose to the goal (using Dijkstra, A*, etc.)"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Local Planner:"})," Reacts to obstacles and adjusts robot movement in real-time (e.g., DWA or TEB planners)"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Controller:"})," Publishes velocity commands to move the robot"]}),"\n"]}),"\n",(0,i.jsx)(e.mermaid,{value:"flowchart TD\r\n    Map(Map)\r\n    GlobalPlanner[Global Planner<br/>A* / Dijkstra]\r\n    LocalPlanner[Local Planner<br/>DWA / TEB]\r\n    Robot(Robot Base)\r\n    Goal(Goal / Waypoints)\r\n    Sensors[LiDAR + Camera<br/>Obstacle Detection]\r\n    \r\n    Map --\x3e GlobalPlanner\r\n    GlobalPlanner --\x3e LocalPlanner\r\n    LocalPlanner --\x3e Robot\r\n    Goal --\x3e GlobalPlanner\r\n    Sensors --\x3e LocalPlanner\r\n    \r\n    GlobalPlanner -.->|Global Path| LocalPlanner\r\n    LocalPlanner -.->|/cmd_vel| Robot"}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-waypoint-based-navigation",children:"\ud83d\udccd Waypoint-Based Navigation"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Waypoints"})," are a series of target locations (x, y, \u03b8) the robot must visit, enabling coverage or precise multi-stage missions."]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Typical workflow:"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Define waypoints:"})," A list of (x, y, yaw) poses covering your map"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Send waypoints sequentially:"})," Each is treated as a navigation goal"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Monitor progress:"})," Move to next waypoint after success, or handle failure"]}),"\n"]}),"\n",(0,i.jsx)(t.A,{type:"info",title:"Pro Tip",children:(0,i.jsx)(e.p,{children:"In your LIMO project, waypoints are pre-programmed for robust coverage, with optional rotational scans at each stop for 360\xb0 vision."})}),"\n",(0,i.jsx)(e.h3,{id:"waypoint-structure",children:(0,i.jsx)(e.strong,{children:"Waypoint Structure"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# Example waypoint format\r\nWAYPOINTS = [\r\n    {"x": -0.78, "y": -0.23, "theta": 1.57},  # Kitchen\r\n    {"x": -0.49, "y":  0.00, "theta": 0.0},   # Living room\r\n    {"x": -0.22, "y": -0.15, "theta": -0.78}, # Bedroom\r\n    {"x":  0.15, "y": -0.62, "theta": 3.14},  # Bathroom\r\n    {"x":  1.31, "y": -0.65, "theta": 1.0},   # Office\r\n]\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"\ufe0f-setting-waypoints-in-your-project",children:"\ud83d\uddfa\ufe0f Setting Waypoints in Your Project"}),"\n",(0,i.jsx)(e.p,{children:"Waypoints are typically stored as a list/array of positions and orientations (in map frame):"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"python",label:"Python Example",default:!0,children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"# waypoint_navigator.py\r\nimport rclpy\r\nfrom geometry_msgs.msg import PoseStamped\r\nfrom nav2_simple_commander import BasicNavigator\r\n\r\nclass WaypointNavigator:\r\n    def __init__(self):\r\n        self.navigator = BasicNavigator()\r\n        \r\n        # Define mission waypoints (x, y, theta in radians)\r\n        self.waypoints = [\r\n            (-0.78, -0.23,  1.38),   # Point A\r\n            (-0.49,  0.00, -0.58),   # Point B  \r\n            (-0.22, -0.15, -0.96),   # Point C\r\n            ( 0.15, -0.62, -0.51),   # Point D\r\n            ( 1.31, -0.65, -0.17),   # Point E\r\n            ( 2.20, -0.61,  0.03),   # Point F\r\n            ( 3.71, -0.53, -0.06),   # Point G\r\n        ]\r\n    \r\n    def create_pose(self, x, y, theta):\r\n        pose = PoseStamped()\r\n        pose.header.frame_id = 'map'\r\n        pose.header.stamp = self.navigator.get_clock().now().to_msg()\r\n        pose.pose.position.x = x\r\n        pose.pose.position.y = y\r\n        pose.pose.orientation.z = sin(theta / 2.0)\r\n        pose.pose.orientation.w = cos(theta / 2.0)\r\n        return pose\n"})})}),(0,i.jsx)(l.A,{value:"yaml",label:"YAML Configuration",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:'# waypoints.yaml\r\nwaypoint_navigator:\r\n  waypoints:\r\n    - name: "kitchen"\r\n      x: -0.78\r\n      y: -0.23\r\n      theta: 1.38\r\n      actions: ["scan_360", "detect_objects"]\r\n    \r\n    - name: "living_room"\r\n      x: -0.49\r\n      y: 0.00\r\n      theta: -0.58\r\n      actions: ["scan_180"]\r\n    \r\n    - name: "bedroom"\r\n      x: -0.22\r\n      y: -0.15\r\n      theta: -0.96\r\n      actions: ["detect_objects", "pickup_item"]\n'})})})]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"\ufe0f-path-planning-algorithms",children:"\ud83d\udee3\ufe0f Path Planning Algorithms"}),"\n",(0,i.jsx)(e.h3,{id:"global-path-planning",children:(0,i.jsx)(e.strong,{children:"Global Path Planning"})}),"\n",(0,i.jsx)(e.p,{children:"Finds an optimal route from start to goal (ignoring moving obstacles)."}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Algorithm"}),(0,i.jsx)(e.th,{children:"Pros"}),(0,i.jsx)(e.th,{children:"Cons"}),(0,i.jsx)(e.th,{children:"Use Case"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"Dijkstra"})}),(0,i.jsx)(e.td,{children:"Guaranteed optimal"}),(0,i.jsx)(e.td,{children:"Slow for large maps"}),(0,i.jsx)(e.td,{children:"Small, static environments"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"A"}),"*"]}),(0,i.jsx)(e.td,{children:"Fast, optimal"}),(0,i.jsx)(e.td,{children:"Needs good heuristic"}),(0,i.jsx)(e.td,{children:"Most common choice"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.strong,{children:"RRT"}),"*"]}),(0,i.jsx)(e.td,{children:"Good for complex spaces"}),(0,i.jsx)(e.td,{children:"Non-optimal paths"}),(0,i.jsx)(e.td,{children:"Research/complex planning"})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"local-path-planning",children:(0,i.jsx)(e.strong,{children:"Local Path Planning"})}),"\n",(0,i.jsx)(e.p,{children:"Adjusts robot movement to avoid new obstacles and stay on path."}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsxs)(l.A,{value:"dwa",label:"DWA (Dynamic Window)",default:!0,children:[(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"How it works:"})," Evaluates many possible future trajectories, scoring them for:"]}),(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Obstacle avoidance"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Closeness to global path"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Speed and smoothness"})}),"\n"]}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# DWA parameters in nav2_params.yaml\r\nlocal_costmap:\r\n  local_costmap:\r\n    ros__parameters:\r\n      robot_radius: 0.22\r\n      inflation_radius: 0.55\r\n      \r\ncontroller_server:\r\n  ros__parameters:\r\n    controller_frequency: 20.0\r\n    DWB:\r\n      max_vel_x: 0.26\r\n      max_vel_theta: 1.82\n"})})]}),(0,i.jsxs)(l.A,{value:"teb",label:"TEB (Timed Elastic Band)",children:[(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"How it works:"}),' Creates a path that\'s "elastic"\u2014can stretch and compress to avoid obstacles while maintaining smooth motion.']}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# TEB parameters\r\nTEB:\r\n  teb_autosize: true\r\n  dt_ref: 0.3\r\n  dt_hysteresis: 0.1\r\n  max_samples: 500\r\n  allow_init_with_backwards_motion: false\n"})})]})]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-obstacle-avoidance",children:"\ud83d\udea7 Obstacle Avoidance"}),"\n",(0,i.jsx)(e.p,{children:"Your robot uses multiple layers of obstacle detection and avoidance:"}),"\n",(0,i.jsx)(e.h3,{id:"sensor-integration",children:(0,i.jsx)(e.strong,{children:"Sensor Integration"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"LiDAR (YDLIDAR T-mini Pro):"})," 360\xb0 obstacle detection up to 12m"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Depth Camera (Orbbec DaBai):"})," 3D obstacle mapping and recognition"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Ultrasonic sensors:"})," Close-range backup detection"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"costmap-layers",children:(0,i.jsx)(e.strong,{children:"Costmap Layers"})}),"\n",(0,i.jsx)(e.mermaid,{value:"flowchart LR\r\n    Static[Static Layer<br/>From Map]\r\n    Obstacles[Obstacle Layer<br/>From Sensors]\r\n    Inflation[Inflation Layer<br/>Safety Buffer]\r\n    \r\n    Static --\x3e Costmap[Combined Costmap]\r\n    Obstacles --\x3e Costmap\r\n    Inflation --\x3e Costmap\r\n    \r\n    Costmap --\x3e Planner[Local Planner]"}),"\n",(0,i.jsx)(e.h3,{id:"recovery-behaviors",children:(0,i.jsx)(e.strong,{children:"Recovery Behaviors"})}),"\n",(0,i.jsx)(e.p,{children:"When navigation fails, the robot attempts:"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Clear costmaps"})," and retry"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Rotate in place"})," to clear sensor data"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Back up"})," and try alternative path"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Wait"})," for dynamic obstacles to move"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-running-waypoint-navigation",children:"\ud83c\udfc1 Running Waypoint Navigation"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsxs)(l.A,{value:"single",label:"Single Goal (RViz/CLI)",default:!0,children:[(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"1. Launch navigation stack:"})}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"ros2 launch limo_bringup limo_nav2.launch.py\n"})}),(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"2. Set initial pose in RViz:"}),' Use "2D Pose Estimate" tool']}),(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"3. Send goal via RViz:"}),' Use "2D Nav Goal" tool']}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Or via command line:"})}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"ros2 action send_goal /navigate_to_pose nav2_msgs/action/NavigateToPose \\\r\n'{pose: {pose: {position: {x: 1.0, y: 2.0, z: 0.0}, \r\norientation: {z: 0.0, w: 1.0}}}}'\n"})})]}),(0,i.jsxs)(l.A,{value:"waypoints",label:"Multiple Waypoints (Automated)",children:[(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Launch waypoint navigation:"})}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# Start the navigation stack\r\nros2 launch limo_bringup limo_nav2.launch.py\r\n\r\n# Run waypoint navigation node\r\nros2 run limo_navigation waypoint_navigator\n"})}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Example Python implementation:"})}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def navigate_waypoints(self):\r\n    for i, waypoint in enumerate(self.waypoints):\r\n        self.get_logger().info(f'Navigating to waypoint {i+1}')\r\n        \r\n        goal_pose = self.create_pose(waypoint[0], waypoint[1], waypoint[2])\r\n        self.navigator.goToPose(goal_pose)\r\n        \r\n        # Wait for navigation to complete\r\n        while not self.navigator.isTaskComplete():\r\n            feedback = self.navigator.getFeedback()\r\n            # Optional: publish progress, check for cancellation\r\n            \r\n        result = self.navigator.getResult()\r\n        if result == TaskResult.SUCCEEDED:\r\n            self.get_logger().info(f'Waypoint {i+1} reached!')\r\n        else:\r\n            self.get_logger().error(f'Failed to reach waypoint {i+1}')\n"})})]}),(0,i.jsxs)(l.A,{value:"manual",label:"Manual Control Backup",children:[(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Emergency manual control:"})}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# Teleop control (if navigation fails)\r\nros2 run teleop_twist_keyboard teleop_twist_keyboard\r\n\r\n# Or use the LIMO remote control app\r\n# Physical remote control is always available as backup\n"})})]})]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"\ufe0f-navigation-configuration",children:"\u2699\ufe0f Navigation Configuration"}),"\n",(0,i.jsx)(e.h3,{id:"key-navigation-parameters",children:(0,i.jsx)(e.strong,{children:"Key Navigation Parameters"})}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Parameter"}),(0,i.jsx)(e.th,{children:"Description"}),(0,i.jsx)(e.th,{children:"Typical Value"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"robot_radius"})}),(0,i.jsx)(e.td,{children:"Robot footprint radius"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"0.22"})," m"]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"max_vel_x"})}),(0,i.jsx)(e.td,{children:"Maximum linear velocity"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"0.26"})," m/s"]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"max_vel_theta"})}),(0,i.jsx)(e.td,{children:"Maximum angular velocity"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"1.82"})," rad/s"]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"controller_frequency"})}),(0,i.jsx)(e.td,{children:"Control loop rate"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"20.0"})," Hz"]})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"planner_frequency"})}),(0,i.jsx)(e.td,{children:"Global planning rate"}),(0,i.jsxs)(e.td,{children:[(0,i.jsx)(e.code,{children:"1.0"})," Hz"]})]})]})]}),"\n",(0,i.jsx)(e.h3,{id:"tuning-for-your-environment",children:(0,i.jsx)(e.strong,{children:"Tuning for Your Environment"})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:["\ud83c\udfe0 ",(0,i.jsx)(e.strong,{children:"Indoor Environments"})]}),(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Reduce max velocities"})," for safety around furniture"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Increase inflation radius"})," for narrow corridors"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Enable recovery behaviors"})," for dynamic obstacles (people/pets)"]}),"\n"]}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"max_vel_x: 0.15\r\nmax_vel_theta: 1.0\r\ninflation_radius: 0.8\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:["\ud83c\udf33 ",(0,i.jsx)(e.strong,{children:"Outdoor Environments"})]}),(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Increase max velocities"})," for efficiency"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Reduce inflation radius"})," for tight spaces"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Tune sensor filters"})," for grass/uneven terrain"]}),"\n"]}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:"max_vel_x: 0.5\r\nmax_vel_theta: 2.0\r\ninflation_radius: 0.3\n"})})]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-best-practices--troubleshooting",children:"\ud83d\udca1 Best Practices & Troubleshooting"}),"\n",(0,i.jsx)(e.h3,{id:"planning-your-waypoints",children:(0,i.jsx)(e.strong,{children:"Planning Your Waypoints"})}),"\n",(0,i.jsx)(t.A,{type:"tip",title:"Waypoint Selection",children:(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Space waypoints 1-3 meters apart"})," for optimal performance"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Include orientation"})," for tasks requiring specific facing direction"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Test each waypoint manually"})," before adding to mission"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Plan for charging/home base"})," as final waypoint"]}),"\n"]})}),"\n",(0,i.jsx)(e.h3,{id:"common-issues--solutions",children:(0,i.jsx)(e.strong,{children:"Common Issues & Solutions"})}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:["\ud83d\udeab ",(0,i.jsx)(e.strong,{children:"Robot Won't Move"})]}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Possible causes:"})}),(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Initial pose not set correctly"}),"\n",(0,i.jsx)(e.li,{children:"Map/odom transform issues"}),"\n",(0,i.jsx)(e.li,{children:"Safety limits triggered"}),"\n"]}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Solutions:"})}),(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# Check transforms\r\nros2 run tf2_tools view_frames\r\n\r\n# Verify navigation stack status\r\nros2 topic echo /navigate_to_pose/_action/status\r\n\r\n# Reset navigation\r\nros2 service call /global_costmap/clear_entirely_global_costmap nav2_msgs/srv/ClearEntirelyGlobalCostmap\n"})})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:["\ud83d\udd04 ",(0,i.jsx)(e.strong,{children:"Path Planning Failures"})]}),(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Symptoms:"})," Robot plans impossible or inefficient paths"]}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Solutions:"})}),(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Check costmap configuration"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Verify sensor data quality"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Tune planner parameters"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.strong,{children:"Update map if environment changed"})}),"\n"]})]}),"\n",(0,i.jsxs)(r,{children:[(0,i.jsxs)("summary",{children:["\u26a1 ",(0,i.jsx)(e.strong,{children:"Performance Optimization"})]}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"For faster navigation:"})}),(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Increase ",(0,i.jsx)(e.code,{children:"controller_frequency"})]}),"\n",(0,i.jsxs)(e.li,{children:["Tune ",(0,i.jsx)(e.code,{children:"max_vel_x"})," and ",(0,i.jsx)(e.code,{children:"max_vel_theta"})]}),"\n",(0,i.jsx)(e.li,{children:"Optimize costmap update frequencies"}),"\n",(0,i.jsx)(e.li,{children:"Use efficient global planner (A*)"}),"\n"]})]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-performance-monitoring",children:"\ud83d\udcca Performance Monitoring"}),"\n",(0,i.jsx)(e.h3,{id:"navigation-metrics",children:(0,i.jsx)(e.strong,{children:"Navigation Metrics"})}),"\n",(0,i.jsx)(e.p,{children:"Monitor these topics for performance analysis:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"# Navigation status\r\nros2 topic echo /navigate_to_pose/_action/feedback\r\n\r\n# Current robot pose\r\nros2 topic echo /amcl_pose\r\n\r\n# Planned path\r\nros2 topic echo /plan\r\n\r\n# Velocity commands\r\nros2 topic echo /cmd_vel\n"})}),"\n",(0,i.jsx)(e.h3,{id:"success-rate-tracking",children:(0,i.jsx)(e.strong,{children:"Success Rate Tracking"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"# Example metrics collection\r\nclass NavigationMetrics:\r\n    def __init__(self):\r\n        self.total_waypoints = 0\r\n        self.successful_waypoints = 0\r\n        self.average_time_per_waypoint = 0.0\r\n        \r\n    def calculate_success_rate(self):\r\n        return (self.successful_waypoints / self.total_waypoints) * 100\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-integration-with-object-detection",children:"\ud83c\udfaf Integration with Object Detection"}),"\n",(0,i.jsx)(e.p,{children:"Your navigation system works seamlessly with object detection:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"# Example: Stop navigation for object pickup\r\ndef on_object_detected(self, msg):\r\n    # Pause navigation\r\n    self.navigator.cancelTask()\r\n    \r\n    # Perform object detection/pickup\r\n    self.perform_pickup_sequence()\r\n    \r\n    # Resume navigation to next waypoint\r\n    self.continue_mission()\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-learn-more",children:"\ud83d\udcda Learn More"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://navigation.ros.org/",children:"ROS2 Navigation Documentation"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://navigation.ros.org/tuning/index.html",children:"Nav2 Tuning Guide"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://navigation.ros.org/configuration/packages/configuring-dwb-controller.html",children:"DWA Planner Parameters"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://navigation.ros.org/configuration/packages/configuring-costmaps.html",children:"Costmap Configuration"})}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-next-steps",children:"\ud83c\udfaf Next Steps"}),"\n",(0,i.jsxs)(t.A,{type:"note",title:"Ready for Advanced Features?",children:[(0,i.jsx)(e.p,{children:"Now that you understand navigation fundamentals:"}),(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Next:"})," ",(0,i.jsx)(e.a,{href:"/limo_cobot_documentation/docs/core-concepts/object-detection",children:"Object Detection & Manipulation"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Integration:"})," ",(0,i.jsx)(e.a,{href:"/limo_cobot_documentation/docs/core-concepts/system-integration",children:"System Integration"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Advanced:"})," ",(0,i.jsx)(e.a,{href:"/limo_cobot_documentation/docs/advanced-usage/waypoint-management",children:"Custom Waypoint Management"})]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Troubleshooting:"})," ",(0,i.jsx)(e.a,{href:"/limo_cobot_documentation/docs/troubleshooting/common-errors",children:"Navigation Issues"})]}),"\n"]})]})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(g,{...n})}):g(n)}}}]);