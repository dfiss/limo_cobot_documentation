"use strict";(self.webpackChunklimo_cobot_documentation=self.webpackChunklimo_cobot_documentation||[]).push([[8726],{8928:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>h,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>j});const i=JSON.parse('{"id":"future-work/feature-requests","title":"\ud83d\udcad Feature Requests","description":"We want the LIMO Pro + MyCobot + YOLO system to evolve with the needs of its users and contributors.","source":"@site/docs/future-work/feature-requests.md","sourceDirName":"future-work","slug":"/future-work/feature-requests","permalink":"/limo_cobot_documentation/docs/future-work/feature-requests","draft":false,"unlisted":false,"editUrl":"https://github.com/krish-rRay23/limo_cobot_documentation/tree/main/docs/future-work/feature-requests.md","tags":[],"version":"current","lastUpdatedBy":"Krish Ray","lastUpdatedAt":1754645365000,"sidebarPosition":18,"frontMatter":{"sidebar_position":18},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\uddfa\ufe0f Project Roadmap","permalink":"/limo_cobot_documentation/docs/future-work/roadmap"},"next":{"title":"\ud83d\udd27 Planned Improvements","permalink":"/limo_cobot_documentation/docs/future-work/improvements"}}');var s=r(74848),n=r(28453),o=r(27293),l=r(11470),d=r(19365),c=r(28774);const a={sidebar_position:18},h="\ud83d\udcad Feature Requests",u={},j=[{value:"\ud83d\udccc Current Community Requests",id:"-current-community-requests",level:2},{value:"\ud83d\udce8 Request Submission Process",id:"-request-submission-process",level:2},{value:"\u2696\ufe0f Evaluation Criteria",id:"\ufe0f-evaluation-criteria",level:2},{value:"\ud83c\udff7 Implementation Priorities",id:"-implementation-priorities",level:2}];function x(e){const t={a:"a",br:"br",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"-feature-requests",children:"\ud83d\udcad Feature Requests"})}),"\n",(0,s.jsxs)(t.p,{children:["We want the ",(0,s.jsx)(t.strong,{children:"LIMO Pro + MyCobot + YOLO"})," system to evolve with the needs of its users and contributors.",(0,s.jsx)(t.br,{}),"\n","This page explains ",(0,s.jsx)(t.strong,{children:"how to submit feature requests"}),", how they\u2019re evaluated, and how we decide on implementation priority."]}),"\n","\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"-current-community-requests",children:"\ud83d\udccc Current Community Requests"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Feature"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Status"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Multi-object queue handling"}),(0,s.jsx)(t.td,{children:"Detect, store, and collect multiple targets in a single mission"}),(0,s.jsx)(t.td,{children:"Under Review"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Web dashboard control"}),(0,s.jsx)(t.td,{children:"Browser-based UI for monitoring and manual override"}),(0,s.jsx)(t.td,{children:"Planned"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Voice command support"}),(0,s.jsx)(t.td,{children:"Control robot states using voice inputs"}),(0,s.jsx)(t.td,{children:"Planned"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Configurable YOLO classes"}),(0,s.jsx)(t.td,{children:"Switch detection targets without retraining"}),(0,s.jsx)(t.td,{children:"Accepted"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Health diagnostics node"}),(0,s.jsx)(t.td,{children:"Monitors CPU, battery, motor status"}),(0,s.jsx)(t.td,{children:"Accepted"})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"-request-submission-process",children:"\ud83d\udce8 Request Submission Process"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(d.A,{value:"github",label:"GitHub Issues",children:(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Go to the ",(0,s.jsx)(t.a,{href:"https://github.com/your-org/limo-cobot-documentation/issues",children:"Project GitHub Repository"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"New Issue"})," \u2192 Select ",(0,s.jsx)(t.strong,{children:"Feature Request"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Fill in:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Feature name"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Problem it solves"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Proposed implementation"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Priority level"})}),"\n"]}),"\n"]}),"\n"]})}),(0,s.jsx)(d.A,{value:"discord",label:"Discord",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Join the ",(0,s.jsx)(t.a,{href:"https://discord.gg/your-discord",children:"Discord server"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Post your request in the ",(0,s.jsx)(t.strong,{children:"#feature-requests"})," channel."]}),"\n",(0,s.jsx)(t.li,{children:"A maintainer will tag it for tracking."}),"\n"]})})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"\ufe0f-evaluation-criteria",children:"\u2696\ufe0f Evaluation Criteria"}),"\n",(0,s.jsx)(t.p,{children:"When deciding whether to implement a feature, we consider:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Impact"})," \u2014 Will it significantly improve workflow or capabilities?"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Feasibility"})," \u2014 Can it be implemented with available hardware and time?"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Performance Cost"})," \u2014 Will it slow down detection, navigation, or arm control?"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Safety"})," \u2014 Does it introduce any risk to the robot, objects, or users?"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Maintainability"})," \u2014 Can it be supported long-term without major rework?"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"-implementation-priorities",children:"\ud83c\udff7 Implementation Priorities"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Priority"}),(0,s.jsx)(t.th,{children:"Definition"}),(0,s.jsx)(t.th,{children:"Example"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"High"})}),(0,s.jsx)(t.td,{children:"Critical for performance, reliability, or safety"}),(0,s.jsx)(t.td,{children:"Health diagnostics node"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"Medium"})}),(0,s.jsx)(t.td,{children:"Improves usability or flexibility"}),(0,s.jsx)(t.td,{children:"Voice command support"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"Low"})}),(0,s.jsx)(t.td,{children:"Nice-to-have but non-essential"}),(0,s.jsx)(t.td,{children:"Fun voice feedback variations"})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(o.A,{type:"tip",title:"Pro Tip",children:(0,s.jsxs)(t.p,{children:["The fastest way to get your feature accepted is to submit a ",(0,s.jsx)(t.strong,{children:"proof-of-concept"})," or ",(0,s.jsx)(t.strong,{children:"working prototype"})," along with your request."]})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(c.A,{className:"button button--primary button--lg",to:"/docs/developer/contributing",children:(0,s.jsx)(t.p,{children:"\ud83d\udcd6 See How to Contribute Your Feature"})})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}}}]);