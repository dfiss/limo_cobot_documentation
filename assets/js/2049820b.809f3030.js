"use strict";(self.webpackChunklimo_cobot_documentation=self.webpackChunklimo_cobot_documentation||[]).push([[8832],{92857:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>g,contentTitle:()=>h,default:()=>x,frontMatter:()=>a,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"developer/adding-nodes","title":"\ud83c\udd95 Adding New Nodes & Packages","description":"This guide explains how to create new ROS2 nodes and packages for the LIMO Pro + MyCobot + YOLO ecosystem, follow architectural best practices, integrate them into the workflow, and test them safely.","source":"@site/docs/developer/adding-nodes.md","sourceDirName":"developer","slug":"/developer/adding-nodes","permalink":"/limo_cobot_documentation/docs/developer/adding-nodes","draft":false,"unlisted":false,"editUrl":"https://github.com/krish-rRay23/limo_cobot_documentation/tree/main/docs/developer/adding-nodes.md","tags":[],"version":"current","lastUpdatedBy":"Krish Ray","lastUpdatedAt":1754645088000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"\u270f\ufe0f Code Style & Standards","permalink":"/limo_cobot_documentation/docs/developer/code-style"},"next":{"title":"\ud83d\ude80 Launch & Config Files","permalink":"/limo_cobot_documentation/docs/developer/launch-config-files"}}');var r=i(74848),o=i(28453),d=i(11470),l=i(19365),t=i(27293),c=i(28774);const a={sidebar_position:3},h="\ud83c\udd95 Adding New Nodes & Packages",g={},p=[{value:"\ud83d\udce6 Creating a New Package",id:"-creating-a-new-package",level:2},{value:"\ud83e\udde9 Node Architecture Guidelines",id:"-node-architecture-guidelines",level:2},{value:"1. Initialization",id:"1-initialization",level:3},{value:"2. Core Logic",id:"2-core-logic",level:3},{value:"3. Shutdown Handling",id:"3-shutdown-handling",level:3},{value:"\ud83d\udd17 Integration Procedures",id:"-integration-procedures",level:2},{value:"1. Add to Launch File",id:"1-add-to-launch-file",level:3},{value:"2. Respect Existing Topics",id:"2-respect-existing-topics",level:3},{value:"3. Parameterize IPs and Paths",id:"3-parameterize-ips-and-paths",level:3},{value:"4. Logging &amp; Voice Feedback",id:"4-logging--voice-feedback",level:3},{value:"\ud83e\uddea Testing New Nodes",id:"-testing-new-nodes",level:2},{value:"\u2705 Pre-Merge Checklist for New Nodes",id:"-pre-merge-checklist-for-new-nodes",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-adding-new-nodes--packages",children:"\ud83c\udd95 Adding New Nodes & Packages"})}),"\n",(0,r.jsxs)(n.p,{children:["This guide explains ",(0,r.jsx)(n.strong,{children:"how to create new ROS2 nodes and packages"})," for the ",(0,r.jsx)(n.strong,{children:"LIMO Pro + MyCobot + YOLO"})," ecosystem, follow architectural best practices, integrate them into the workflow, and test them safely."]}),"\n","\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-creating-a-new-package",children:"\ud83d\udce6 Creating a New Package"}),"\n",(0,r.jsx)(n.p,{children:"We use ROS2 Python packages for most nodes in this project."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd ~/krish_ws/src\r\nros2 pkg create --build-type ament_python my_new_node\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"my_new_node/\r\n \u251c\u2500\u2500 package.xml\r\n \u251c\u2500\u2500 setup.py\r\n \u251c\u2500\u2500 resource/my_new_node\r\n \u251c\u2500\u2500 my_new_node/__init__.py\r\n \u251c\u2500\u2500 my_new_node/my_new_node.py\r\n \u2514\u2500\u2500 launch/\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-node-architecture-guidelines",children:"\ud83e\udde9 Node Architecture Guidelines"}),"\n",(0,r.jsx)(t.A,{type:"tip",title:"Keep it Modular",children:(0,r.jsxs)(n.p,{children:["Each node should have ",(0,r.jsx)(n.strong,{children:"one core responsibility"})," (e.g., detection, navigation, arm control) and communicate via ROS2 topics/services/actions."]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Required structure inside a node:"})}),"\n",(0,r.jsx)(n.h3,{id:"1-initialization",children:"1. Initialization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Node name"}),"\n",(0,r.jsx)(n.li,{children:"Parameters"}),"\n",(0,r.jsx)(n.li,{children:"Publishers/Subscribers/Action clients"}),"\n",(0,r.jsx)(n.li,{children:"Logging start message"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-core-logic",children:"2. Core Logic"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Main loop or callbacks"}),"\n",(0,r.jsx)(n.li,{children:"State handling (if applicable)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-shutdown-handling",children:"3. Shutdown Handling"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Stop motors, close connections, save state"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example skeleton:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import rclpy\r\nfrom rclpy.node import Node\r\n\r\nclass MyNewNode(Node):\r\n    def __init__(self):\r\n        super().__init__('my_new_node')\r\n        self.get_logger().info(\"Node initialized.\")\r\n\r\n    def main_loop(self):\r\n        pass  # Core logic here\r\n\r\ndef main(args=None):\r\n    rclpy.init(args=args)\r\n    node = MyNewNode()\r\n    rclpy.spin(node)\r\n    node.destroy_node()\r\n    rclpy.shutdown()\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-integration-procedures",children:"\ud83d\udd17 Integration Procedures"}),"\n",(0,r.jsx)(n.p,{children:"To integrate a new node:"}),"\n",(0,r.jsx)(n.h3,{id:"1-add-to-launch-file",children:"1. Add to Launch File"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"launch_ros.actions.Node"})," in ",(0,r.jsx)(n.code,{children:"full_system.launch.py"})," with proper ",(0,r.jsx)(n.code,{children:"TimerAction"})," so it starts after dependencies are ready."]}),"\n",(0,r.jsx)(n.h3,{id:"2-respect-existing-topics",children:"2. Respect Existing Topics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If publishing ",(0,r.jsx)(n.code,{children:"/target_pose"}),", ensure format matches ",(0,r.jsx)(n.code,{children:"PoseStamped"})," from ",(0,r.jsx)(n.code,{children:"object_detector.py"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Avoid name collisions with existing topics."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-parameterize-ips-and-paths",children:"3. Parameterize IPs and Paths"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For hardware nodes (like MyCobot), accept IP from ",(0,r.jsx)(n.code,{children:"--ros-args -p m5_ip:=...."})]}),"\n",(0,r.jsx)(n.li,{children:"Never hardcode file paths \u2014 use ROS2 params."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-logging--voice-feedback",children:"4. Logging & Voice Feedback"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"self.get_logger().info()"})," for state changes."]}),"\n",(0,r.jsxs)(n.li,{children:["For user feedback, follow the ",(0,r.jsx)(n.code,{children:"say()"})," function pattern in ",(0,r.jsx)(n.code,{children:"pick_node.py"})," and ",(0,r.jsx)(n.code,{children:"mission_manager.py"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-testing-new-nodes",children:"\ud83e\uddea Testing New Nodes"}),"\n",(0,r.jsxs)(d.A,{children:[(0,r.jsx)(l.A,{value:"sim",label:"Simulation First",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"RViz2"})," and fake data to test without risking hardware."]}),"\n",(0,r.jsx)(n.li,{children:"If it's a detection node, feed it saved images."}),"\n",(0,r.jsx)(n.li,{children:"If it's a navigation node, test in Gazebo before the real robot."}),"\n"]})}),(0,r.jsx)(l.A,{value:"hardware",label:"Hardware Deployment",children:(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ensure the workspace is clear"})," of obstacles."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Launch only your new node + dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ros2 run my_new_node my_new_node\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Watch logs in real-time:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ros2 topic echo /your_topic\n"})}),"\n"]}),"\n"]})})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-pre-merge-checklist-for-new-nodes",children:"\u2705 Pre-Merge Checklist for New Nodes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2610 Package builds with ",(0,r.jsx)(n.code,{children:"colcon build --symlink-install"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u2610 Code follows ",(0,r.jsx)(n.a,{href:"/docs/developer/code-style",children:"Code Style Guidelines"})]}),"\n",(0,r.jsx)(n.li,{children:"\u2610 Node starts without errors or warnings"}),"\n",(0,r.jsxs)(n.li,{children:["\u2610 Integration tested with ",(0,r.jsx)(n.code,{children:"full_system.launch.py"})]}),"\n",(0,r.jsx)(n.li,{children:"\u2610 Does not break Mission Manager or YOLO detection logic"}),"\n"]}),"\n",(0,r.jsx)(c.A,{className:"button button--primary button--lg",to:"/docs/developer/launch-config-files",children:(0,r.jsx)(n.p,{children:"\ud83d\udcd6 Read Next: Launch & Config File Creation"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Next: Launch Configuration Files"})})]})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);