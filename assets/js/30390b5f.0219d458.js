"use strict";(self.webpackChunklimo_cobot_documentation=self.webpackChunklimo_cobot_documentation||[]).push([[6117],{88269:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"developer/launch-config-files","title":"\ud83d\ude80 Launch & Config Files","description":"In the LIMO Pro + MyCobot + YOLO system, launch files and configuration files are critical for ensuring every node starts in the correct order, with the right parameters, and without conflicts.","source":"@site/docs/developer/launch-config-files.md","sourceDirName":"developer","slug":"/developer/launch-config-files","permalink":"/limo_cobot_documentation/docs/developer/launch-config-files","draft":false,"unlisted":false,"editUrl":"https://github.com/krish-rRay23/limo_cobot_documentation/tree/main/docs/developer/launch-config-files.md","tags":[],"version":"current","lastUpdatedBy":"Krish Ray","lastUpdatedAt":1754645088000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"\ud83c\udd95 Adding New Nodes & Packages","permalink":"/limo_cobot_documentation/docs/developer/adding-nodes"},"next":{"title":"\ud83d\udcd6 Project Story \u2014 Lessons Learned","permalink":"/limo_cobot_documentation/docs/lessons-learned/project-story"}}');var s=r(74848),a=r(28453),t=r(11470),l=r(19365),o=r(27293);const c={sidebar_position:4},d="\ud83d\ude80 Launch & Config Files",h={},u=[{value:"\ud83d\udcdd Writing Custom Launch Files",id:"-writing-custom-launch-files",level:2},{value:"\u23f1 Startup Sequencing with TimerAction",id:"-startup-sequencing-with-timeraction",level:2},{value:"\u2699\ufe0f Configuration File Formats",id:"\ufe0f-configuration-file-formats",level:2},{value:"\ud83d\udd04 Parameter Management",id:"-parameter-management",level:2},{value:"\ud83d\udca1 Launch File Best Practices",id:"-launch-file-best-practices",level:2},{value:"\u2705 Checklist Before Committing",id:"-checklist-before-committing",level:2},{value:"\ud83d\udcce Related",id:"-related",level:2}];function m(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-launch--config-files",children:"\ud83d\ude80 Launch & Config Files"})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"LIMO Pro + MyCobot + YOLO"})," system, launch files and configuration files are ",(0,s.jsx)(n.strong,{children:"critical"})," for ensuring every node starts in the correct order, with the right parameters, and without conflicts.",(0,s.jsx)(n.br,{}),"\n","This guide explains ",(0,s.jsx)(n.strong,{children:"how to write, structure, and manage them"}),"."]}),"\n","\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-writing-custom-launch-files",children:"\ud83d\udcdd Writing Custom Launch Files"}),"\n",(0,s.jsxs)(n.p,{children:["We use ",(0,s.jsx)(n.strong,{children:"Python-based ROS2 launch files"})," to control startup."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example minimal launch file:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from launch import LaunchDescription\r\nfrom launch_ros.actions import Node\r\n\r\ndef generate_launch_description():\r\n    return LaunchDescription([\r\n        Node(\r\n            package='my_package',\r\n            executable='my_node',\r\n            name='my_node',\r\n            output='screen',\r\n            parameters=[{'example_param': 'value'}]\r\n        )\r\n    ])\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-startup-sequencing-with-timeraction",children:"\u23f1 Startup Sequencing with TimerAction"}),"\n",(0,s.jsxs)(n.p,{children:["Our ",(0,s.jsx)(n.code,{children:"full_system.launch.py"})," uses ",(0,s.jsx)(n.code,{children:"TimerAction"})," so nodes launch only after dependencies are ready:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from launch.actions import TimerAction\r\n\r\nTimerAction(period=2.0, actions=[nav2_node]),  # Start Nav2 after 2s\r\nTimerAction(period=3.0, actions=[pose_setter]), # Pose setter after Nav2\r\nTimerAction(period=10.0, actions=[mission_manager]), # Mission Manager last\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Why?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Nav2 must load the map before ",(0,s.jsx)(n.code,{children:"pose_setter"})," runs."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mission_manager"})," must wait until localization and YOLO detection are ready."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-configuration-file-formats",children:"\u2699\ufe0f Configuration File Formats"}),"\n",(0,s.jsxs)(n.p,{children:["We use ",(0,s.jsx)(n.strong,{children:"YAML"})," for parameters like ",(0,s.jsx)(n.code,{children:"nav2_params.yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"amcl:\r\n  ros__parameters:\r\n    min_particles: 500\r\n    max_particles: 2000\r\n    update_min_a: 0.2\r\n    update_min_d: 0.25\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Tips:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"ros__parameters"})," root key for ROS2."]}),"\n",(0,s.jsx)(n.li,{children:"Keep one YAML per node for clarity."}),"\n",(0,s.jsxs)(n.li,{children:["Store in ",(0,s.jsx)(n.code,{children:"config/"})," inside the package."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-parameter-management",children:"\ud83d\udd04 Parameter Management"}),"\n",(0,s.jsx)(n.p,{children:"You can pass parameters in three ways:"}),"\n",(0,s.jsxs)(t.A,{children:[(0,s.jsx)(l.A,{value:"inline",label:"Inline in Launch",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"Node(\r\n    package=\"my_package\",\r\n    executable=\"my_node\",\r\n    parameters=[{'m5_ip': '192.168.137.75'}]\r\n)\n"})})}),(0,s.jsx)(l.A,{value:"yaml",label:"From YAML",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'Node(\r\n    package="nav2_bringup",\r\n    executable="bringup_launch.py",\r\n    parameters=["config/nav2_params.yaml"]\r\n)\n'})})}),(0,s.jsx)(l.A,{value:"cli",label:"From CLI",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ros2 run my_package my_node --ros-args -p m5_ip:=192.168.137.75\n"})})})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-launch-file-best-practices",children:"\ud83d\udca1 Launch File Best Practices"}),"\n",(0,s.jsx)(o.A,{type:"tip",title:"Do This",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.strong,{children:"FindPackageShare"})," so your launch files work from any workspace."]}),"\n",(0,s.jsxs)(n.li,{children:["Keep launch files ",(0,s.jsx)(n.strong,{children:"modular"})," \u2014 one per subsystem (YOLO, navigation, arm)."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"SetLaunchConfiguration"})," for values reused across nodes."]}),"\n",(0,s.jsx)(n.li,{children:"Log key events so the startup process is traceable."}),"\n"]})}),"\n",(0,s.jsx)(o.A,{type:"danger",title:"Avoid",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Hardcoding absolute paths \u2014 always resolve relative to the package share."}),"\n",(0,s.jsx)(n.li,{children:"Starting all nodes at once \u2014 it causes race conditions."}),"\n",(0,s.jsx)(n.li,{children:"Embedding too much logic in launch files \u2014 keep them orchestration-only."}),"\n"]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-checklist-before-committing",children:"\u2705 Checklist Before Committing"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2610 Launch file runs without errors."}),"\n",(0,s.jsx)(n.li,{children:"\u2610 Config YAML loads correctly (no tab characters \u2014 YAML only allows spaces)."}),"\n",(0,s.jsx)(n.li,{children:"\u2610 Dependencies start in the right order."}),"\n",(0,s.jsxs)(n.li,{children:["\u2610 Works both from ",(0,s.jsx)(n.code,{children:"ros2 launch"})," and as part of ",(0,s.jsx)(n.code,{children:"full_system.launch.py"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-related",children:"\ud83d\udcce Related"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.ros.org/en/foxy/Tutorials/Intermediate/Launch/Launch-Main.html",children:"ROS2 Launch File API Docs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.ros.org/en/foxy/Tutorials/Beginner-Client-Libraries/Using-Parameters-In-A-Class-Python.html",children:"Parameter Files in ROS2"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Next: Parameter Tuning & Optimization"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);